# Puppet CI Resources

classes:
  - nsidc_jenkins
  - nsidc_nfs

# NFS Mounts
nsidc_nfs::sharemounts:
  /share/sw/packages:
    project: sw
    share: packages

# Jenkins Plugins
nsidc_jenkins::plugins:
  simple-theme-plugin: {}

job_integration_checkout: "%{hiera('project')}_A01_Integration_Checkout_Project"
job_integration_install_deps: "%{hiera('project')}_A02_Integration_Install_Dependencies"
job_integration_syntax: "%{hiera('project')}_A03_Integration_Check_Syntax"
job_integration_unit_tests: "%{hiera('project')}_A04_Integration_Run_Unit_Tests"
job_integration_provision: "%{hiera('project')}_A05_Integration_Provision"
job_integration_acceptance: "%{hiera('project')}_A06_Integration_Run_Acceptance_Tests"

job_qa_checkout: "%{hiera('project')}_B01_QA_Checkout_Project"
job_qa_install_deps: "%{hiera('project')}_B02_QA_Install_Dependencies"
job_qa_provision: "%{hiera('project')}_B03_QA_Provision"
job_qa_acceptance: "%{hiera('project')}_B04_QA_Run_Acceptance_Tests"

job_staging_checkout: "%{hiera('project')}_C01_Staging_Checkout_Project"
job_staging_install_deps: "%{hiera('project')}_C02_Staging_Install_Dependencies"
job_staging_provision: "%{hiera('project')}_C03_Staging_Provision"
job_staging_acceptance: "%{hiera('project')}_C04_Staging_Run_Acceptance_Tests"

job_blue_provision: "%{hiera('project')}_D01_Blue_Provision"

job_release_bump_version: "%{hiera('project')}_E01_Release_Bump_Version"
job_release_push: "%{hiera('project')}_E02_Release_Push_to_Git"

job_cleanup_vms: "%{hiera('project')}_Z01_Destroy_Non_Production_Deployed_VMs"

# WORKSPACES
# NOTE: The Ops Jenkins jobs Dataset_Search_Acceptance_Tests and
# Dataset_Search_Acceptance_Test_Configuration depend on the workspace locations
# defined below. If any workspace paths change, the Ops Jenkins jobs must be
# updated accordingly.
workspace_base: /var/lib/jenkins/workspaces/%{hiera('project')}
workspace_integration: "%{hiera('workspace_base')}/integration"
workspace_qa: "%{hiera('workspace_base')}/qa"
workspace_staging: "%{hiera('workspace_base')}/staging"
workspace_blue: "%{hiera('workspace_base')}/blue"
workspace_release: "%{hiera('workspace_base')}/release"

# Jenkins Jobs
nsidc_jenkins::jobs:
  # clone the project into the shared workspace
  "%{hiera('job_integration_checkout')}":
    workspace: "%{hiera('workspace_integration')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: master
    git:
      repo: "%{hiera('gitrepo')}"
      poll_scm: true
      checkout_local: false
    command: git checkout $ref
    trigger_job: "%{hiera('job_integration_install_deps')}"

  "%{hiera('job_integration_install_deps')}":
    command: bundle install
    workspace: "%{hiera('workspace_integration')}"
    trigger_job: "%{hiera('job_integration_syntax')}"

  "%{hiera('job_integration_syntax')}":
    command: bundle exec rubocop
    workspace: "%{hiera('workspace_integration')}"
    trigger_job: "%{hiera('job_integration_unit_tests')}"

  "%{hiera('job_integration_unit_tests')}":
    command: bundle exec rake spec:unit
    workspace: "%{hiera('workspace_integration')}"
    trigger_job: "%{hiera('job_integration_provision')}"

  "%{hiera('job_integration_provision')}":
    command: |
      ENV=integration

      (vagrant nsidc hijack --env=$ENV || true)
      (vagrant nsidc destroy --env=$ENV || true)
      vagrant nsidc up --env=$ENV

      bundle exec rake jenkins:release:tag_deployment[$ENV]
    workspace: "%{hiera('workspace_integration')}"
    trigger_job: "%{hiera('job_integration_acceptance')}"

  "%{hiera('job_integration_acceptance')}":
    command: |
      export TARGET_ENVIRONMENT=integration
      bundle exec rake spec:acceptance
    workspace: "%{hiera('workspace_integration')}"

  "%{hiera('job_qa_checkout')}":
    git:
      repo: "%{hiera('gitrepo')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: master
    command: |
      git checkout $ref
    workspace: "%{hiera('workspace_qa')}"
    trigger_job: "%{hiera('job_qa_install_deps')}"

  "%{hiera('job_qa_install_deps')}":
    command: bundle install
    workspace: "%{hiera('workspace_qa')}"
    trigger_job: "%{hiera('job_qa_provision')}"

  "%{hiera('job_qa_provision')}":
    command: |
      ENV=qa

      (vagrant nsidc hijack --env=$ENV || true)
      (vagrant nsidc destroy --env=$ENV || true)
      vagrant nsidc up --env=$ENV

      bundle exec rake jenkins:release:tag_deployment[$ENV]
    workspace: "%{hiera('workspace_qa')}"
    trigger_job: "%{hiera('job_qa_acceptance')}"

  "%{hiera('job_qa_acceptance')}":
    command: |
      export TARGET_ENVIRONMENT=qa
      bundle exec rake spec:acceptance
    workspace: "%{hiera('workspace_qa')}"

  "%{hiera('job_staging_checkout')}":
    git:
      repo: "%{hiera('gitrepo')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: qa
    command: |
      git checkout $ref
    workspace: "%{hiera('workspace_staging')}"
    trigger_job: "%{hiera('job_staging_install_deps')}"

  "%{hiera('job_staging_install_deps')}":
    command: bundle install
    workspace: "%{hiera('workspace_staging')}"
    trigger_job: "%{hiera('job_staging_provision')}"

  "%{hiera('job_staging_provision')}":
    command: |
      ENV=staging

      (vagrant nsidc hijack --env=$ENV || true)
      (vagrant nsidc destroy --env=$ENV || true)
      vagrant nsidc up --env=$ENV

      bundle exec rake jenkins:release:tag_deployment[$ENV]
    workspace: "%{hiera('workspace_staging')}"
    trigger_job: "%{hiera('job_staging_acceptance')}"

  "%{hiera('job_staging_acceptance')}":
    command: |
      export TARGET_ENVIRONMENT=staging
      bundle exec rake spec:acceptance
    workspace: "%{hiera('workspace_staging')}"
    trigger_job: "%{hiera('job_blue_provision')}"

  "%{hiera('job_blue_provision')}":
    git:
      repo: "%{hiera('gitrepo')}"
    parameters:
      - type: string
        name: ref
        description: git ref (branch, tag, or SHA) to checkout
        default: staging
    command: |
      ENV=blue

      git checkout $ref

      bundle install

      vagrant nsidc hijack --env=$ENV || true
      vagrant nsidc destroy --env=$ENV || true
      vagrant nsidc up --env=$ENV

      bundle exec rake jenkins:release:tag_deployment[$ENV]
    workspace: "%{hiera('workspace_blue')}"

  "%{hiera('job_release_bump_version')}":
    git:
      repo: "%{hiera('gitrepo')}"
    parameters:
      - type: string
        name: branch
        description: git branch to checkout and tag
        default: master
      - type: choice
        name: version_part
        choices:
        - patch
        - minor
        - major
    command: |
      git checkout $branch

      bundle install
      bundle exec rake jenkins:release:bump[$version_part]
    workspace: "%{hiera('workspace_release')}"
    trigger_job: "%{hiera('job_release_push')}"

  "%{hiera('job_release_push')}":
    command: bundle exec rake jenkins:release:push
    workspace: "%{hiera('workspace_release')}"

  "%{hiera('job_cleanup_vms')}":
    description: |
      Clean up non-production VMs that are not needed while the project is not
      in development.
    parameters:
      - type: boolean
        name: integration
        description: destroy the machine deployed to integration
        default: true

      - type: boolean
        name: qa
        description: destroy the machine deployed to qa
        default: true

      - type: boolean
        name: staging
        description: destroy the machine deployed to staging
        default: true

    command: |
      hijack_and_destroy () {
        vagrant nsidc hijack --env=$1 --project=%{hiera('project')} && vagrant nsidc destroy --env=$1 --project=%{hiera('project')} || true
      }

      if $integration; then
        hijack_and_destroy integration
      fi

      if $qa; then
        hijack_and_destroy qa
      fi

      if $staging; then
        hijack_and_destroy staging
      fi
